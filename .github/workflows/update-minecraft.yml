name: Update Twitch Stream for Minecraft

on:
  schedule:
    - cron: "*/1 * * * *"
  workflow_dispatch:  # Manual trigger

jobs:
  update-minecraft:
    runs-on: windows-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Authenticate with Azure
      - name: Authenticate with Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Step 3: Retrieve Refresh Token from Azure Key Vault
      - name: Retrieve Refresh Token from Key Vault
        id: get-refresh-token
        shell: pwsh
        run: |
          $KeyVaultName = "${{ secrets.AZURE_KEYVAULT_NAME }}"
          $SecretName = "Twitch-RefreshToken"

          $RefreshToken = az keyvault secret show --vault-name $KeyVaultName --name $SecretName --query value -o tsv
          Write-Output "refresh_token=$RefreshToken" | Out-File -FilePath $env:GITHUB_ENV -Append

      # Step 4: Refresh OAuth token using the retrieved refresh token
      - name: Update Twitch Stream for Minecraft
        shell: pwsh
        run: |
          # Twitch API credentials from repo secrets
          $ClientId = "${{ secrets.CLIENTID }}"
          $ClientSecret = "${{ secrets.CLIENTSECRET }}"
          $RefreshToken = "${{ env.refresh_token }}"  # Use the retrieved refresh token

          # Get a new OAuth token using the refresh token
          $TokenResponse = Invoke-RestMethod -Uri "https://id.twitch.tv/oauth2/token" -Method Post -Body @{
              client_id = $ClientId
              client_secret = $ClientSecret
              grant_type = "refresh_token"
              refresh_token = $RefreshToken
          }
          $AccessToken = $TokenResponse.access_token

          # Get game ID for Minecraft
          $GameName = "Minecraft"
          $GameResponse = Invoke-RestMethod -Uri "https://api.twitch.tv/helix/games?name=$GameName" -Headers @{
              "Client-ID" = $ClientId
              "Authorization" = "Bearer $AccessToken"
          }
          $GameId = $GameResponse.data[0].id

          # Update stream info
          $StreamTitle = "Starting the day with some Minecraft adventures!"
          $Tags = @("Minecraft", "MinecraftHardcore", "MinecraftSurvival", "MinecraftChallenge", "GamingCommunity", "LetsPlayMinecraft", "GamingClips", "MinecraftAdventure", "GamerLife", "StreamHighlights")

          $UpdateBody = @{
              title = $StreamTitle
              game_id = $GameId
              broadcaster_id = "${{ vars.BROADCASTERID }}"
              tags = $Tags
          } | ConvertTo-Json -Depth 10

          # Update stream info
          Invoke-RestMethod -Uri "https://api.twitch.tv/helix/channels" -Method Patch -Headers @{
              "Client-ID" = $ClientId
              "Authorization" = "Bearer $AccessToken"
              "Content-Type" = "application/json"
          } -Body $UpdateBody

          Write-Host "Minecraft stream information updated successfully!"
