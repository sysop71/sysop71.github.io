# GitHub API credentials and necessary values
$GitHubToken = "${{ secrets.GH_PAT }}"
$RepoName = "${{ github.repository }}" # This gets the repository name
$NewRefreshToken = "new_refresh_token_here" # Get this from Twitch API

# Headers for GitHub API request
$Headers = @{
    "Authorization" = "Bearer $GitHubToken"
    "Accept" = "application/vnd.github+json"
    "X-GitHub-Api-Version" = "2022-11-28"
}

# Fetch the public key for the repository
$PublicKeyResponse = Invoke-RestMethod -Uri "https://api.github.com/repos/$RepoName/actions/secrets/public_key" -Headers $Headers

# Ensure that key_id is retrieved from the response
if ($PublicKeyResponse.key_id) {
    Write-Host "Key ID retrieved: $($PublicKeyResponse.key_id)"
    $KeyId = $PublicKeyResponse.key_id
} else {
    Write-Host "Error: Key ID not found in the response."
    exit 1
}

# Encrypt the new refresh token using the public key
$EncryptedValue = [Convert]::ToBase64String([Text.Encoding]::UTF8.GetBytes($NewRefreshToken))

# Prepare the request body to update the secret
$SecretBody = @{
    "encrypted_value" = $EncryptedValue
    "key_id" = $KeyId
} | ConvertTo-Json -Depth 10

# GitHub API URL to update the refresh token secret
$ApiUrl = "https://api.github.com/repos/$RepoName/actions/secrets/REFRESHTOKEN"

# Send the request to update the secret
Invoke-RestMethod -Uri $ApiUrl -Method Put -Headers $Headers -Body $SecretBody

Write-Host "Refresh token updated successfully!"
