name: Announce New Post

on:
  push:
    branches:
      - master
    paths:
      - "_posts/**"

env:
  ACTIONS_RUNNER_DEBUG: true
  ACTIONS_STEP_DEBUG: true

jobs:
  send_notification:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Find New Blog Posts
        id: find_new_posts
        run: |
          git fetch --depth=2
          NEW_POSTS=$(git diff --diff-filter=A --name-only HEAD^ HEAD | grep '^_posts/.*\.md$' || true)
          echo "new_posts=$NEW_POSTS" >> $GITHUB_ENV
          if [ -z "$NEW_POSTS" ]; then
            echo "No new posts added."
            exit 0
          fi

          # Process first new post (modify if handling multiple posts)
          POST_FILE=$(echo "$NEW_POSTS" | head -n 1)
          POST_FILENAME=$(basename "$POST_FILE")
          POST_DATE=$(echo "$POST_FILENAME" | cut -d '-' -f 1-3 | tr '-' '/')
          POST_URL="/blog/$POST_DATE/$(echo "$POST_FILENAME" | sed -E 's/^[0-9]{4}-[0-9]{2}-[0-9]{2}-//' | sed 's/\.md$//').html"

          # Extract front matter values
          POST_TITLE=$(awk -F': ' '/^title:/ {print $2; exit}' "$POST_FILE" | tr -d '"')
          POST_TAGS=$(awk -F': ' '/^tags:/ {gsub(", ", " #", $2); print "#" $2; exit}' "$POST_FILE")

          echo "post_url=$POST_URL" >> $GITHUB_ENV
          echo "post_title=$POST_TITLE" >> $GITHUB_ENV
          echo "post_tags=$POST_TAGS" >> $GITHUB_ENV
          echo "post_filename=$POST_FILENAME" >> $GITHUB_ENV

      - name: Debug Output (Testing)
        run: |
          echo "Debug Info:"
          echo "Filename: ${{ env.post_filename }}"
          echo "Title: ${{ env.post_title }}"
          echo "Tags: ${{ env.post_tags }}"
          echo "URL: https://sysop71.com${{ env.post_url }}"

      - name: Wait for GitHub Pages to Deploy (Delay)
        run: |
          echo "Waiting for GitHub Pages to deploy..."
          sleep 60  # Delay to allow GitHub Pages deployment

      - name: Post to Bluesky
        if: ${{ env.new_posts != '' }}
        uses: mod-posh/Post2BlueSky@v0.0.3.0
        with:
          Message: |
            A new post is live: [Sysop71.com](https://sysop71.com${{ env.post_url }})
            Title: ${{ env.post_title }}
            ${{ env.post_tags }}
          verbose: "verbose"
          bluesky_api_key: ${{ secrets.bluesky_api_key }}
          bluesky_identifier: ${{ secrets.bluesky_identifier }}

      - name: Post to Discord
        if: ${{ env.new_posts != '' }}
        uses: mod-posh/Post2Discord@v0.0.3.2
        with:
          message: |
            A new post is live: [Sysop71.com](https://sysop71.com${{ env.post_url }})
            Title: ${{ env.post_title }}
            ${{ env.post_tags }}
          discordWebhook: ${{ secrets.SYSOP71_DISCORD_WEBHOOK }}
